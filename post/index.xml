<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lukasz Lipski</title>
    <link>https://lukaszlipski.dev/post/</link>
    <description>Recent content in Posts on Lukasz Lipski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 06 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://lukaszlipski.dev/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RTTI Internals in MSVC</title>
      <link>https://lukaszlipski.dev/post/rtti-msvc/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lukaszlipski.dev/post/rtti-msvc/</guid>
      <description>&lt;p&gt;In this article, I&amp;rsquo;d like to explain how MSVC handles the Run-Time Type Information (RTTI).
In C++, RTTI can be used by dynamic_cast, typeid or exception handling. I won&amp;rsquo;t go into details about each of the mentioned use cases but rather I&amp;rsquo;ll focus on MSVC implementation of the RTTI.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
